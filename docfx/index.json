{
  "Cobertura/SummaryGithub.html": {
    "href": "Cobertura/SummaryGithub.html",
    "title": "Summary | Bank App",
    "summary": "Summary Summary Generated on: 23/04/2025 - 17:04:17 Coverage date: 23/04/2025 - 17:04:08 Parser: Cobertura Assemblies: 1 Classes: 3 Files: 2 Line coverage: 21.5% (11 of 51) Covered lines: 11 Uncovered lines: 40 Coverable lines: 51 Total lines: 74 Branch coverage: 20% (2 of 10) Covered branches: 2 Total branches: 10 Method coverage: Feature is only available for sponsors Coverage Bank.WebApi - 21.5% Name Line Branch Bank.WebApi 21.5% 20% Bank.WebApi.Models.BankAccount 55% 33.3% Program 0% 0% WeatherForecast 0%"
  },
  "disenio.html": {
    "href": "disenio.html",
    "title": "| Bank App",
    "summary": "classDiagram class BankAccount BankAccount : +String CustomerName BankAccount : +Double Balance BankAccount : +Debit() Void BankAccount : +Credit() Void"
  },
  "docs/Bank.WebApi.Models.BankAccount.html": {
    "href": "docs/Bank.WebApi.Models.BankAccount.html",
    "title": "Class BankAccount | Bank App",
    "summary": "Class BankAccount Namespace Bank.WebApi.Models Assembly Bank.WebApi.dll Representa una cuenta bancaria con funcionalidades básicas de débito y crédito. Permite gestionar el balance de un cliente específico. public class BankAccount Inheritance object BankAccount Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Esta clase implementa las operaciones fundamentales de una cuenta bancaria, incluyendo validaciones para prevenir operaciones inválidas como débitos que excedan el balance o montos negativos. Constructors BankAccount(string, double) Inicializa una nueva instancia de la clase BankAccount. public BankAccount(string customerName, double balance) Parameters customerName string El nombre del cliente propietario de la cuenta. balance double El balance inicial de la cuenta. Examples var account = new BankAccount(\"Juan Pérez\", 1000.0); Exceptions ArgumentNullException Se lanza cuando customerName es null. ArgumentException Se lanza cuando customerName está vacío. Properties Balance Obtiene el balance actual de la cuenta. public double Balance { get; } Property Value double El balance actual como un número de punto flotante. CustomerName Obtiene el nombre del cliente propietario de la cuenta. public string CustomerName { get; } Property Value string El nombre del cliente como una cadena de texto. Methods Credit(double) Acredita (deposita) una cantidad específica al balance de la cuenta. public void Credit(double amount) Parameters amount double La cantidad a acreditar a la cuenta. Examples var account = new BankAccount(\"Juan Pérez\", 1000.0); account.Credit(500.0); // Balance resultante: 1500.0 Exceptions ArgumentOutOfRangeException Se lanza cuando el monto es negativo. Debit(double) Debita (retira) una cantidad específica del balance de la cuenta. public void Debit(double amount) Parameters amount double La cantidad a debitar de la cuenta. Examples var account = new BankAccount(\"Juan Pérez\", 1000.0); account.Debit(250.0); // Balance resultante: 750.0 Exceptions ArgumentOutOfRangeException Se lanza cuando: El monto es mayor que el balance actual El monto es negativo"
  },
  "docs/Bank.WebApi.Models.html": {
    "href": "docs/Bank.WebApi.Models.html",
    "title": "Namespace Bank.WebApi.Models | Bank App",
    "summary": "Namespace Bank.WebApi.Models Classes BankAccount Representa una cuenta bancaria con funcionalidades básicas de débito y crédito. Permite gestionar el balance de un cliente específico."
  },
  "docs/Bank.WebApi.Tests.BankAccountTests.html": {
    "href": "docs/Bank.WebApi.Tests.BankAccountTests.html",
    "title": "Class BankAccountTests | Bank App",
    "summary": "Class BankAccountTests Namespace Bank.WebApi.Tests Assembly Bank.WebApi.Tests.dll Contiene las pruebas unitarias para la clase BankAccount. Verifica el comportamiento correcto de las operaciones de débito y crédito. public class BankAccountTests Inheritance object BankAccountTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Esta clase de pruebas utiliza NUnit para validar: Operaciones de débito válidas e inválidas Operaciones de crédito válidas e inválidas Manejo correcto de excepciones Methods Credit_WithNegativeAmount_ThrowsArgumentOutOfRangeException() Verifica que un crédito con monto negativo lance ArgumentOutOfRangeException. [Test] public void Credit_WithNegativeAmount_ThrowsArgumentOutOfRangeException() Remarks Prueba la validación de entrada para prevenir créditos con valores negativos. Credit_WithPositiveAmount_IncreasesBalance() Verifica que un crédito con monto positivo incremente correctamente el balance. [Test] public void Credit_WithPositiveAmount_IncreasesBalance() Remarks Prueba el escenario normal de depósito de dinero en la cuenta. Debit_WithAmountGreaterThanBalance_ThrowsArgumentOutOfRangeException() Verifica que un débito con monto mayor al balance lance ArgumentOutOfRangeException. [Test] public void Debit_WithAmountGreaterThanBalance_ThrowsArgumentOutOfRangeException() Remarks Prueba el comportamiento de validación cuando se intenta debitar más dinero del disponible. Debit_WithNegativeAmount_ThrowsArgumentOutOfRangeException() Verifica que un débito con monto negativo lance ArgumentOutOfRangeException. [Test] public void Debit_WithNegativeAmount_ThrowsArgumentOutOfRangeException() Remarks Prueba la validación de entrada para prevenir débitos con valores negativos. Debit_WithValidAmount_UpdatesBalance() Verifica que un débito con monto válido actualice correctamente el balance. [Test] public void Debit_WithValidAmount_UpdatesBalance() Remarks Prueba el escenario normal donde el monto a debitar es menor que el balance actual."
  },
  "docs/Bank.WebApi.Tests.html": {
    "href": "docs/Bank.WebApi.Tests.html",
    "title": "Namespace Bank.WebApi.Tests | Bank App",
    "summary": "Namespace Bank.WebApi.Tests Classes BankAccountTests Contiene las pruebas unitarias para la clase BankAccount. Verifica el comportamiento correcto de las operaciones de débito y crédito."
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Bank App",
    "summary": "This is the HOMEPAGE. Diagrama de Clases Pruebas"
  }
}